* Exercise 1.10.  

The following procedure computes a mathematical function called
Ackermann's function. 
#+BEGIN_SRC scheme
(define (A x y)
  (cond ((= y 0) 0)
        ((= x 0) (* 2 y))
        ((= y 1) 2)
        (else (A (- x 1)
                 (A x (- y 1))))))
#+END_SRC

What are the values of the following expressions?

#+BEGIN_SRC scheme 
(A 1 10)

(A 2 4)

(A 3 3)
#+END_SRC

Consider the following procedures, where A is the procedure defined
above: 

#+BEGIN_SRC scheme
(define (f n) (A 0 n))

(define (g n) (A 1 n))

(define (h n) (A 2 n))

(define (k n) (* 5 n n))
#+END_SRC
 
Give concise mathematical definitions for the functions computed by
the procedures f, g, and h for positive integer values of n. For
example, (k n) computes 5n2.

* Answer

** Value of (A 1 10)
   #+BEGIN_SRC scheme
   (A 0 (A 1 9))
   (A 0 (A 0 (A 1 8))
   ...
   (A 0 (A 0 (A 0 (A 0 ... (A 0 1)))))
   2^depth => 2^10 => 1024
   #+END_SRC

** Value of (A 2 4)
   #+BEGIN_SRC scheme
   (A 1 (A 2 3))
   (A 1 (A 1 (A 2 2)))
   (A 1 (A 1 (A 1 (A 2 1))))
   (A 1 (A 1 (A 1 (A 1 (A 1 1)))))
   (A 1 (A 1 (A 1 (A 1 2))))
   (A 1 (A 1 (A 1 4)))
   ...
   => 2^2^2^4
   => 65536
   #+END_SRC

** Value of (A 3 3)
   #+BEGIN_SRC scheme
   (A 2 (A 3 2))
   (A 2 (A 2 (A 3 1)))
   (A 2 (A 2 2))
   (A 2 4)
   =>63356
   #+END_SRC

** Mathematical definition of (f n) => 2*n

** Mathematical definition of (g n) => 2^n

** Mathematical definition of (h n) => 2 ^ h(n-1) when n > 0 , 0  when n = 0 

